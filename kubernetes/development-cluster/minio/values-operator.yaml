# Default values for minio-operator.

operator:
  ## Setup environment variables for the Operator
#  env:
#    - name: MINIO_OPERATOR_DEPLOYMENT_NAME
#      valueFrom:
#        fieldRef:
#          fieldPath: metadata.labels['app.kubernetes.io/name']
#    - name: MINIO_CONSOLE_TLS_ENABLE
#      value: "off"
#    - name: CLUSTER_DOMAIN
#      value: "dev.universphere.cloud"
#    - name: WATCHED_NAMESPACE
#      value: ""
#    - name: MINIO_OPERATOR_RUNTIME
#      value: "OpenShift"
  env: [] 
  #   - name: CLUSTER_DOMAIN
  #     value: dev.universphere.cloud
  #   # - name: MINIO_OPERATOR_RUNTIME
  #   #   value: "OpenShift"
  #   - name: OPERATOR_CERT_PASSWD
  #     value: "SAVE_PASSWORD"
  #   - name: MINIO_CONSOLE_TLS_ENABLE
  #     value: "on"
  #
  ### Image field:
  ## Image from tag (original behaviour), for example:
  # image:
  #   repository: quay.io/minio/operator
  #   tag: v5.0.10
  #   pullPolicy: IfNotPresent
  ## Image from digest (added after original behaviour), for example:
  # image:
  #   repository: quay.io/minio/operator@sha256
  #   digest: 28c80b379c75242c6fe793dfbf212f43c602140a0de5ebe3d9c2a3a7b9f9f983
  #   pullPolicy: IfNotPresent
  image:
    repository: quay.io/minio/operator
    tag: v5.0.10
    pullPolicy: IfNotPresent
  imagePullSecrets: [ ]
  runtimeClassName: ~
  initContainers: [ ]
  replicaCount: 1
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    fsGroup: 1000
  containerSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
  ###
  # An array of `Volumes <https://kubernetes.io/docs/concepts/storage/volumes/>`__ which the Operator can mount to pods.
  #
  # The volumes must exist *and* be accessible to the Operator pods.
  volumes: 
    - name: minio-volume
    ###
  # An array of volume mount points associated to each Operator container.
  # 
  # Specify each item in the array as follows:
  #
  # .. code-block:: yaml
  #
  #    volumeMounts:
  #    - name: volumename
  #      mountPath: /path/to/mount
  #
  # The ``name`` field must correspond to an entry in the ``volumes`` array.
  volumeMounts:
    - name: minio-volume
      mountPath: /mnt/minio
  nodeSelector: { }
  priorityClassName: ""
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: name
                operator: In
                values:
                  - minio-operator
          topologyKey: kubernetes.io/hostname
  tolerations: [ ]
  topologySpreadConstraints: [ ]
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
      ephemeral-storage: 500Mi

console:
  enabled: true
  image:
    repository: quay.io/minio/operator
    tag: v5.0.10
    pullPolicy: IfNotPresent
  env: []
  imagePullSecrets: [ ]
  runtimeClassName: ~
  initContainers: [ ]
  replicaCount: 1
  nodeSelector: { }
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: name
                operator: In
                values:
                  - minio-operator
          topologyKey: kubernetes.io/hostname

  tolerations: [ ]
  topologySpreadConstraints: [ ]
  resources:
    requests:
      cpu: 0.25
      memory: 512Mi
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
  containerSecurityContext:
    runAsUser: 1000
    runAsNonRoot: true
  ingress:
    enabled: false
    ingressClassName: "traefik"
    labels: { }
    annotations: {
      cert-manager.io/cluster-issuer: prod-issuer
    }
    host: dev.universphere.cloud
    path: /minio
    pathType: Prefix
    tls: 
      - hosts:
        - dev.universphere.cloud
        secretName: universphere-prod-tls 
  volumes: 
    - name: minio-volume
  volumeMounts: 
    - name: minio-volume
      mountPath: /mnt/minio
